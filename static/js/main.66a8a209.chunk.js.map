{"version":3,"sources":["components/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","setState","window","setInterval","console","info","toUTCString","slice","clearInterval","className","props","clockName","React","Component","App","hasClock","document","addEventListener","event","preventDefault","newName","value","now","toString","getRandomName","debug","content","ReactDOM","render","getElementById"],"mappings":"sNAMaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,KACVC,QAAS,GAHb,uDAME,WAAqB,IAAD,OAClBC,KAAKC,SAAS,CACZJ,KAAM,IAAIC,OAGZ,IAAMC,EAAUG,OAAOC,aAAY,WACjC,EAAKF,SAAS,CACZJ,KAAM,IAAIC,SAEX,KAGHM,QAAQC,KAAKL,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,IACvDP,KAAKC,SAAS,CAAEF,cAnBpB,kCAsBE,WACMC,KAAKJ,MAAMG,SACbS,cAAcR,KAAKJ,MAAMG,WAxB/B,oBA4BE,WACE,OACE,sBAAKU,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGT,KAAKU,MAAMC,YAGb,YAED,sBAAMF,UAAU,cAAhB,SACGT,KAAKJ,MAAMC,KAAKS,cAAcC,OAAO,IAAK,YAtCrD,GAA2BK,IAAMC,WCI1B,IAAMC,EAAb,4MACElB,MAAQ,CACNmB,UAAU,EACVJ,UAAW,WAHf,uDAME,WAAqB,IAAD,OAClBK,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKlB,SAAS,CACZc,UAAU,OAGdC,SAASC,iBAAiB,SAAS,WACjC,EAAKhB,SAAS,CACZc,UAAU,OAIdb,OAAOC,aAAY,WACjB,IAAMiB,EA1BZ,WACE,IAAMC,EAAQvB,KAAKwB,MAAMC,WAAWhB,OAAO,GAE3C,MAAM,SAAN,OAAgBc,GAuBIG,GAGhBpB,QAAQqB,MAAR,uBAA8B,EAAK7B,MAAMe,UAAzC,eAAyDS,IAEzD,EAAKnB,SAAS,CACZU,UAAWS,MAEZ,QA5BP,oBA+BE,WACE,IAAIM,EAQJ,OANI1B,KAAKJ,MAAMmB,WACbW,EACE,cAAC,EAAD,CAAOf,UAAWX,KAAKJ,MAAMe,aAK/B,sBAAKF,UAAU,MAAf,UACE,6CACCiB,SA3CT,GAAyBd,IAAMC,WCP/Bc,IAASC,OACP,cAAC,EAAD,IACAZ,SAASa,eAAe,W","file":"static/js/main.66a8a209.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  clockName: string,\n};\n\nexport class Clock extends React.Component<Props> {\n  state = {\n    time: new Date(),\n    timerId: 0,\n  };\n\n  componentDidMount() {\n    this.setState({\n      time: new Date(),\n    });\n\n    const timerId = window.setInterval(() => {\n      this.setState({\n        time: new Date(),\n      });\n    }, 1000);\n\n    // eslint-disable-next-line no-console\n    console.info(this.state.time.toUTCString().slice(-12, -4));\n    this.setState({ timerId });\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({\n        hasClock: false,\n      });\n    });\n    document.addEventListener('click', () => {\n      this.setState({\n        hasClock: true,\n      });\n    });\n\n    window.setInterval(() => {\n      const newName = getRandomName();\n\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${this.state.clockName} to ${newName}`);\n      // this.state.clockName = newName;\n      this.setState({\n        clockName: newName,\n      });\n    }, 3300);\n  }\n\n  render() {\n    let content;\n\n    if (this.state.hasClock) {\n      content = (\n        <Clock clockName={this.state.clockName} />\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {content}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}